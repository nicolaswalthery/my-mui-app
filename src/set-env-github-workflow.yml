name: Build and Deploy React App

on:
  push:
    branches: [ main, develop ]  # Trigger on pushes to main and develop
  pull_request:
    branches: [ main ]  # Trigger on PRs to main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # 2. Setup Node.js environment
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'  # or '20' for latest LTS
        cache: 'npm'  # Cache npm dependencies for faster builds
        
    # 3. Install dependencies
    - name: Install dependencies
      run: npm ci  # Use 'npm ci' instead of 'npm install' for CI environments
      
    # 4. Create .env file with secrets (your current approach)
    - name: Set environment variables
      run: |
        echo "VITE_DEFAULT_LANGUAGE=${{ secrets.VITE_DEFAULT_LANGUAGE }}" >> .env
        echo "VITE_APP_TITLE=${{ secrets.VITE_APP_TITLE }}" >> .env
        echo "VITE_VERSION=${{ secrets.VITE_VERSION }}" >> .env
        echo "VITE_API_CALL_TIMEOUT=${{ secrets.VITE_API_CALL_TIMEOUT }}" >> .env
        echo "VITE_SOURCE=${{ secrets.VITE_SOURCE }}" >> .env
        echo "VITE_AIRTABLE_BASE_URL=${{ secrets.VITE_AIRTABLE_BASE_URL }}" >> .env
        echo "VITE_STARCMD_AIRTABLE_TOKEN=${{ secrets.VITE_STARCMD_AIRTABLE_TOKEN }}" >> .env
        echo "VITE_STARCMD_AIRTABLE_CLIENT_TABLE_NAME=${{ secrets.VITE_STARCMD_AIRTABLE_CLIENT_TABLE_NAME }}" >> .env
        echo "VITE_STARCMD_AIRTABLE_CATEGORIES_TABLE_NAME=${{ secrets.VITE_STARCMD_AIRTABLE_CATEGORIES_TABLE_NAME }}" >> .env
        echo "VITE_STARCMD_AIRTABLE_EMAIL_EXAMPLE_TABLE_NAME=${{ secrets.VITE_STARCMD_AIRTABLE_EMAIL_EXAMPLE_TABLE_NAME }}" >> .env
        echo "VITE_STARCMD_AIRTABLE_CLIENT_TABLE_ID=${{ secrets.VITE_STARCMD_AIRTABLE_CLIENT_TABLE_ID }}" >> .env
        echo "VITE_STARCMD_AIRTABLE_CATEGORIES_TABLE_ID=${{ secrets.VITE_STARCMD_AIRTABLE_CATEGORIES_TABLE_ID }}" >> .env
        echo "VITE_STARCMD_AIRTABLE_EMAIL_EXAMPLE_TABLE_ID=${{ secrets.VITE_STARCMD_AIRTABLE_EMAIL_EXAMPLE_TABLE_ID }}" >> .env
        
    # 5. Run linting (optional but recommended)
    # - name: Run ESLint
    #   run: npm run lint
    #   continue-on-error: true  # Don't fail the build if linting fails
      
    # 6. Run tests (optional but recommended)
    # - name: Run tests
    #   run: npm run test
    #   env:
    #     CI: true
        
    # 7. Build the application
    - name: Build application
      run: npm run build
      
    # 8. Upload build artifacts (optional - useful for debugging)
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        
    # 9. Deploy to GitHub Pages (if using GitHub Pages)
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'  # Only deploy from main branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        
    # Alternative: Deploy to other platforms
    # - name: Deploy to Netlify
    #   if: github.ref == 'refs/heads/main'
    #   uses: nwtgck/actions-netlify@v2.0
    #   with:
    #     publish-dir: './dist'
    #     production-branch: main
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    # - name: Deploy to Vercel
    #   if: github.ref == 'refs/heads/main'
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}
    #     working-directory: ./